{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD = 'reviews/LOAD';\nconst load = reviews => ({\n  type: LOAD,\n  reviews\n});\nexport const getReviews = id => async dispatch => {\n  const response = await csrfFetch(`/api/reviews/${id}/reviews`);\n  if (response.ok) {\n    const {\n      Reviews\n    } = await response.json();\n    dispatch(load(Reviews));\n    return Reviews;\n  }\n  return response;\n};\nconst intialState = {\n  spots: {},\n  user: {}\n};\nconst reviewReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD:\n      {\n        const newState = {\n          ...state,\n          spots: {}\n        };\n        let reviewsNormalize = {};\n        console.log(action.reviews);\n        action.reviews.forEach(review => {\n          reviewsNormalize[review.id] = review;\n        });\n        newState.spots = reviews;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default reviewReducer;","map":{"version":3,"names":["csrfFetch","LOAD","load","reviews","type","getReviews","id","dispatch","response","ok","Reviews","json","intialState","spots","user","reviewReducer","state","action","newState","reviewsNormalize","console","log","forEach","review"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/store/reviewReducer.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\"\n\nconst LOAD = 'reviews/LOAD'\n\n\nconst load = reviews => ({\n    type: LOAD,\n    reviews\n})\n\n\nexport const getReviews = (id) => async dispatch => {\n    const response = await csrfFetch(`/api/reviews/${id}/reviews`);\n\n    if (response.ok){\n        const {Reviews} = await response.json();\n        dispatch(load(Reviews))\n        return Reviews\n    }\n    return response\n}\n\nconst intialState = {spots:{}, user: {}}\n\nconst reviewReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case LOAD:{\n            const newState = {...state, spots: {}}\n            let reviewsNormalize = {};\n            console.log(action.reviews)\n            action.reviews.forEach(review => {\n                reviewsNormalize[review.id] = review\n            });\n            newState.spots = reviews\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\nexport default reviewReducer\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAElC,MAAMC,IAAI,GAAG,cAAc;AAG3B,MAAMC,IAAI,GAAGC,OAAO,KAAK;EACrBC,IAAI,EAAEH,IAAI;EACVE;AACJ,CAAC,CAAC;AAGF,OAAO,MAAME,UAAU,GAAIC,EAAE,IAAK,MAAMC,QAAQ,IAAI;EAChD,MAAMC,QAAQ,GAAG,MAAMR,SAAS,CAAE,gBAAeM,EAAG,UAAS,CAAC;EAE9D,IAAIE,QAAQ,CAACC,EAAE,EAAC;IACZ,MAAM;MAACC;IAAO,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACvCJ,QAAQ,CAACL,IAAI,CAACQ,OAAO,CAAC,CAAC;IACvB,OAAOA,OAAO;EAClB;EACA,OAAOF,QAAQ;AACnB,CAAC;AAED,MAAMI,WAAW,GAAG;EAACC,KAAK,EAAC,CAAC,CAAC;EAAEC,IAAI,EAAE,CAAC;AAAC,CAAC;AAExC,MAAMC,aAAa,GAAG,YAAiC;EAAA,IAAhCC,KAAK,uEAAGJ,WAAW;EAAA,IAAEK,MAAM;EAC9C,QAAQA,MAAM,CAACb,IAAI;IACf,KAAKH,IAAI;MAAC;QACN,MAAMiB,QAAQ,GAAG;UAAC,GAAGF,KAAK;UAAEH,KAAK,EAAE,CAAC;QAAC,CAAC;QACtC,IAAIM,gBAAgB,GAAG,CAAC,CAAC;QACzBC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACd,OAAO,CAAC;QAC3Bc,MAAM,CAACd,OAAO,CAACmB,OAAO,CAACC,MAAM,IAAI;UAC7BJ,gBAAgB,CAACI,MAAM,CAACjB,EAAE,CAAC,GAAGiB,MAAM;QACxC,CAAC,CAAC;QACFL,QAAQ,CAACL,KAAK,GAAGV,OAAO;QACxB,OAAOe,QAAQ;MACnB;IACA;MACI,OAAOF,KAAK;EAAA;AAExB,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}