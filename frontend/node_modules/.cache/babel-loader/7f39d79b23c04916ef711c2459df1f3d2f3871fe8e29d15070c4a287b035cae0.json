{"ast":null,"code":"var _jsxFileName = \"/home/marc/exercise/projects/airbnb/frontend/src/components/Bookings/CreateBooking/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './index.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { allBookingsBySpot } from \"../../../store/bookingReducer\";\nimport { DateRangePicker } from 'react-date-range';\nimport { eachDayOfInterval } from \"date-fns\";\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction checkBookedDates(bookings) {\n  console.log(\"bookings in checked\", bookings);\n  let bookedDates = [];\n  if (bookings.length === 0) {\n    return [];\n  }\n  bookings.forEach(booking => {\n    let bookingRange = eachDayOfInterval({\n      start: new Date(Date.UTC(booking.startDate)),\n      end: new Date(Date.UTCbooking.endDate)\n    });\n    console.log(\"booking range in forEach\", bookingRange);\n    bookedDates = [...bookedDates, ...bookingRange];\n  });\n  console.log(\"bookedDAtes before return\", bookedDates);\n  return bookedDates;\n}\nfunction CreateBooking(_ref) {\n  _s();\n  let {\n    spotId\n  } = _ref;\n  const dispatch = useDispatch();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [bookedDates, setBookedDates] = useState([]);\n  const currentBookings = Object.values(useSelector(state => state.bookings.allBookings));\n  console.log(\"currentBookings\", currentBookings);\n  const selectionRange = {\n    startDate,\n    endDate,\n    key: 'selection'\n  };\n  const handleSelect = ranges => {\n    setStartDate(ranges.selection.startDate);\n    setEndDate(ranges.selection.endDate);\n  };\n  const testDate1 = new Date(\"2023-04-20\");\n  const testDate2 = new Date(\"2023-04-22\");\n  useEffect(() => {\n    dispatch(allBookingsBySpot(spotId));\n  }, []);\n  useEffect(() => {\n    setBookedDates(() => {\n      checkBookedDates(currentBookings);\n    }, []);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n        ranges: [selectionRange],\n        minDate: new Date(),\n        rangeColors: [\"#FD6B61\"],\n        onChange: handleSelect,\n        disabledDates: [bookedDates]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reserve-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"airbnb-button full-w\",\n          children: \"Reserve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateBooking, \"BHbjSr1fA8vdYAIwrfb7CpZNXpg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CreateBooking;\nexport default CreateBooking;\nvar _c;\n$RefreshReg$(_c, \"CreateBooking\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useEffect","allBookingsBySpot","DateRangePicker","eachDayOfInterval","checkBookedDates","bookings","console","log","bookedDates","length","forEach","booking","bookingRange","start","Date","UTC","startDate","end","UTCbooking","endDate","CreateBooking","spotId","dispatch","setStartDate","setEndDate","setBookedDates","currentBookings","Object","values","state","allBookings","selectionRange","key","handleSelect","ranges","selection","testDate1","testDate2"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/components/Bookings/CreateBooking/index.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport './index.css'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport { allBookingsBySpot } from \"../../../store/bookingReducer\"\nimport { DateRangePicker } from 'react-date-range';\nimport { eachDayOfInterval } from \"date-fns\"\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nfunction checkBookedDates(bookings){\n    console.log(\"bookings in checked\", bookings)\n    let bookedDates = []\n    if(bookings.length === 0 ){\n        return []\n    }\n    bookings.forEach((booking)=>{\n        let bookingRange = eachDayOfInterval({\n            start: new Date(Date.UTC(booking.startDate)),\n            end: new Date(Date.UTCbooking.endDate)\n        })\n        console.log(\"booking range in forEach\", bookingRange)\n        bookedDates = [...bookedDates, ...bookingRange]\n    })\n    console.log(\"bookedDAtes before return\", bookedDates)\n    return bookedDates\n}\n\nfunction CreateBooking({spotId}){\n    const dispatch = useDispatch()\n    const [startDate, setStartDate] = useState(new Date())\n    const [endDate, setEndDate] = useState(new Date())\n    const [bookedDates, setBookedDates] = useState([])\n\n    const currentBookings = Object.values(useSelector((state)=>state.bookings.allBookings))\n    console.log(\"currentBookings\", currentBookings)\n\n    const selectionRange = {\n        startDate,\n        endDate,\n        key: 'selection'\n    }\n\n    const handleSelect= (ranges) =>{\n        setStartDate(ranges.selection.startDate)\n        setEndDate(ranges.selection.endDate)\n    }\n\n    const testDate1 = new Date(\"2023-04-20\")\n    const testDate2 = new Date(\"2023-04-22\")\n\n    useEffect(()=>{\n        dispatch(allBookingsBySpot(spotId))\n    },[])\n\n    useEffect(()=>{\n        setBookedDates(()=>{\n            checkBookedDates(currentBookings)\n        }, [])\n    })\n\n\n\n    return(\n        <div>\n            <form>\n                <DateRangePicker\n                ranges={[selectionRange]}\n                minDate={new Date()}\n                rangeColors={[\"#FD6B61\"]}\n                onChange={handleSelect}\n                disabledDates={[bookedDates]}\n                />\n                {/* <div className=\"check-in-out-container\">\n                    <div className=\"check-container full-w\">\n                        <div className=\"check-header\">\n                            <span>CHECK-IN</span>\n                        </div>\n                        <div>\n                            <input type=\"date\" className=\"date-input\"></input>\n                        </div>\n                    </div>\n                    <div className=\"check-container full-w\">\n                        <div className=\"check-header\">\n                            <span>CHECKOUT</span>\n                        </div>\n                        <div>\n                            <input type=\"date\" className=\"date-input\"></input>\n                        </div>\n                    </div>\n                </div> */}\n                <div className=\"reserve-button-container\">\n                    <button className=\"airbnb-button full-w\">Reserve</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default CreateBooking\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,aAAa;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAO,yCAAyC,CAAC,CAAC;AAAA;AAElD,SAASC,gBAAgB,CAACC,QAAQ,EAAC;EAC/BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;EAC5C,IAAIG,WAAW,GAAG,EAAE;EACpB,IAAGH,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,EAAE;EACb;EACAJ,QAAQ,CAACK,OAAO,CAAEC,OAAO,IAAG;IACxB,IAAIC,YAAY,GAAGT,iBAAiB,CAAC;MACjCU,KAAK,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAACJ,OAAO,CAACK,SAAS,CAAC,CAAC;MAC5CC,GAAG,EAAE,IAAIH,IAAI,CAACA,IAAI,CAACI,UAAU,CAACC,OAAO;IACzC,CAAC,CAAC;IACFb,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,YAAY,CAAC;IACrDJ,WAAW,GAAG,CAAC,GAAGA,WAAW,EAAE,GAAGI,YAAY,CAAC;EACnD,CAAC,CAAC;EACFN,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,WAAW,CAAC;EACrD,OAAOA,WAAW;AACtB;AAEA,SAASY,aAAa,OAAU;EAAA;EAAA,IAAT;IAACC;EAAM,CAAC;EAC3B,MAAMC,QAAQ,GAAGxB,WAAW,EAAE;EAC9B,MAAM,CAACkB,SAAS,EAAEO,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAIiB,IAAI,EAAE,CAAC;EACtD,MAAM,CAACK,OAAO,EAAEK,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAIiB,IAAI,EAAE,CAAC;EAClD,MAAM,CAACN,WAAW,EAAEiB,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM6B,eAAe,GAAGC,MAAM,CAACC,MAAM,CAAC7B,WAAW,CAAE8B,KAAK,IAAGA,KAAK,CAACxB,QAAQ,CAACyB,WAAW,CAAC,CAAC;EACvFxB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEmB,eAAe,CAAC;EAE/C,MAAMK,cAAc,GAAG;IACnBf,SAAS;IACTG,OAAO;IACPa,GAAG,EAAE;EACT,CAAC;EAED,MAAMC,YAAY,GAAGC,MAAM,IAAI;IAC3BX,YAAY,CAACW,MAAM,CAACC,SAAS,CAACnB,SAAS,CAAC;IACxCQ,UAAU,CAACU,MAAM,CAACC,SAAS,CAAChB,OAAO,CAAC;EACxC,CAAC;EAED,MAAMiB,SAAS,GAAG,IAAItB,IAAI,CAAC,YAAY,CAAC;EACxC,MAAMuB,SAAS,GAAG,IAAIvB,IAAI,CAAC,YAAY,CAAC;EAExCd,SAAS,CAAC,MAAI;IACVsB,QAAQ,CAACrB,iBAAiB,CAACoB,MAAM,CAAC,CAAC;EACvC,CAAC,EAAC,EAAE,CAAC;EAELrB,SAAS,CAAC,MAAI;IACVyB,cAAc,CAAC,MAAI;MACfrB,gBAAgB,CAACsB,eAAe,CAAC;IACrC,CAAC,EAAE,EAAE,CAAC;EACV,CAAC,CAAC;EAIF,oBACI;IAAA,uBACI;MAAA,wBACI,QAAC,eAAe;QAChB,MAAM,EAAE,CAACK,cAAc,CAAE;QACzB,OAAO,EAAE,IAAIjB,IAAI,EAAG;QACpB,WAAW,EAAE,CAAC,SAAS,CAAE;QACzB,QAAQ,EAAEmB,YAAa;QACvB,aAAa,EAAE,CAACzB,WAAW;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B,eAmBF;QAAK,SAAS,EAAC,0BAA0B;QAAA,uBACrC;UAAQ,SAAS,EAAC,sBAAsB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAiB;QAAA;QAAA;QAAA;MAAA,QACvD;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GArEQY,aAAa;EAAA,QACDtB,WAAW,EAKUC,WAAW;AAAA;AAAA,KAN5CqB,aAAa;AAuEtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}