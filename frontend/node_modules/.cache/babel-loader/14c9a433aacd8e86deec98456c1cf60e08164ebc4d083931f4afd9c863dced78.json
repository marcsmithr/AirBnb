{"ast":null,"code":"const LOAD = 'bookings/LOAD';\nconst CREATE = 'bookings/CREATE';\nconst UPDATE = 'bookings/UPDATE';\nconst GET_ONE = 'bookings/GET_ONE';\nconst DELETE = 'bookings/DELETE';\nconst load = bookings => ({\n  type: LOAD,\n  bookings\n});\nexport const allBookingsByUser = () => async dispatch => {\n  console.log(\"hello from booking thunk\");\n  const response = await fetch(`/api/bookings/current`);\n  console.log(\"response in booking thunk\", response);\n  if (response.ok) {\n    const {\n      Bookings\n    } = await response.json();\n    console.log(\"Bookings in thunk\", Bookings);\n    dispatch(load(Bookings));\n    return Bookings;\n  }\n};\nexport const allBookingsBySpot = spotId => async dispatch => {\n  const response = await fetch(`/api/spots/${spotId}/bookings`);\n  if (response.ok) {\n    const bookings = await response.json();\n    console.log(\"bookings for spot\", bookings);\n  }\n};\nconst intialState = {\n  allBookings: {},\n  singleBooking: {}\n};\nconst bookingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState;\n  switch (action.type) {\n    case LOAD:\n      {\n        newState = {\n          ...state,\n          allBookings: {\n            ...state.allBookings\n          },\n          singleBooking: {\n            ...state.singleBooking\n          }\n        };\n        let bookingPlaceholder = {};\n        action.bookings.forEach(booking => {\n          bookingPlaceholder[booking.id] = booking;\n        });\n        newState.allBookings = bookingPlaceholder;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default bookingReducer;","map":{"version":3,"names":["LOAD","CREATE","UPDATE","GET_ONE","DELETE","load","bookings","type","allBookingsByUser","dispatch","console","log","response","fetch","ok","Bookings","json","allBookingsBySpot","spotId","intialState","allBookings","singleBooking","bookingReducer","state","action","newState","bookingPlaceholder","forEach","booking","id"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/store/bookingReducer.js"],"sourcesContent":["const LOAD = 'bookings/LOAD'\nconst CREATE = 'bookings/CREATE'\nconst UPDATE = 'bookings/UPDATE'\nconst GET_ONE = 'bookings/GET_ONE'\nconst DELETE = 'bookings/DELETE'\n\nconst load = bookings => ({\n    type: LOAD,\n    bookings\n})\n\n\nexport const allBookingsByUser = () => async dispatch => {\n    console.log(\"hello from booking thunk\")\n    const response = await fetch (`/api/bookings/current`);\n    console.log(\"response in booking thunk\",response)\n    if(response.ok){\n        const {Bookings} = await response.json()\n        console.log(\"Bookings in thunk\", Bookings)\n        dispatch(load(Bookings))\n        return Bookings\n    }\n}\n\nexport const allBookingsBySpot = (spotId) =>async dispatch => {\n    const response = await fetch (`/api/spots/${spotId}/bookings`)\n\n    if(response.ok){\n        const bookings = await response.json()\n        console.log(\"bookings for spot\", bookings)\n    }\n}\n\n\n\n\nconst intialState = {allBookings:{}, singleBooking: {}}\n\nconst bookingReducer = (state = intialState, action) => {\n    let newState;\n    switch (action.type) {\n        case LOAD: {\n            newState = {...state, allBookings: {...state.allBookings}, singleBooking: {...state.singleBooking}}\n            let bookingPlaceholder = {}\n            action.bookings.forEach(booking => {\n                bookingPlaceholder[booking.id] = booking\n            })\n            newState.allBookings = bookingPlaceholder\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\nexport default bookingReducer\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,eAAe;AAC5B,MAAMC,MAAM,GAAG,iBAAiB;AAChC,MAAMC,MAAM,GAAG,iBAAiB;AAChC,MAAMC,OAAO,GAAG,kBAAkB;AAClC,MAAMC,MAAM,GAAG,iBAAiB;AAEhC,MAAMC,IAAI,GAAGC,QAAQ,KAAK;EACtBC,IAAI,EAAEP,IAAI;EACVM;AACJ,CAAC,CAAC;AAGF,OAAO,MAAME,iBAAiB,GAAG,MAAM,MAAMC,QAAQ,IAAI;EACrDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAG,uBAAsB,CAAC;EACtDH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACC,QAAQ,CAAC;EACjD,IAAGA,QAAQ,CAACE,EAAE,EAAC;IACX,MAAM;MAACC;IAAQ,CAAC,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IACxCN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,QAAQ,CAAC;IAC1CN,QAAQ,CAACJ,IAAI,CAACU,QAAQ,CAAC,CAAC;IACxB,OAAOA,QAAQ;EACnB;AACJ,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAIC,MAAM,IAAI,MAAMT,QAAQ,IAAI;EAC1D,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAG,cAAaK,MAAO,WAAU,CAAC;EAE9D,IAAGN,QAAQ,CAACE,EAAE,EAAC;IACX,MAAMR,QAAQ,GAAG,MAAMM,QAAQ,CAACI,IAAI,EAAE;IACtCN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,QAAQ,CAAC;EAC9C;AACJ,CAAC;AAKD,MAAMa,WAAW,GAAG;EAACC,WAAW,EAAC,CAAC,CAAC;EAAEC,aAAa,EAAE,CAAC;AAAC,CAAC;AAEvD,MAAMC,cAAc,GAAG,YAAiC;EAAA,IAAhCC,KAAK,uEAAGJ,WAAW;EAAA,IAAEK,MAAM;EAC/C,IAAIC,QAAQ;EACZ,QAAQD,MAAM,CAACjB,IAAI;IACf,KAAKP,IAAI;MAAE;QACPyB,QAAQ,GAAG;UAAC,GAAGF,KAAK;UAAEH,WAAW,EAAE;YAAC,GAAGG,KAAK,CAACH;UAAW,CAAC;UAAEC,aAAa,EAAE;YAAC,GAAGE,KAAK,CAACF;UAAa;QAAC,CAAC;QACnG,IAAIK,kBAAkB,GAAG,CAAC,CAAC;QAC3BF,MAAM,CAAClB,QAAQ,CAACqB,OAAO,CAACC,OAAO,IAAI;UAC/BF,kBAAkB,CAACE,OAAO,CAACC,EAAE,CAAC,GAAGD,OAAO;QAC5C,CAAC,CAAC;QACFH,QAAQ,CAACL,WAAW,GAAGM,kBAAkB;QACzC,OAAOD,QAAQ;MACnB;IACA;MACI,OAAOF,KAAK;EAAA;AAExB,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}