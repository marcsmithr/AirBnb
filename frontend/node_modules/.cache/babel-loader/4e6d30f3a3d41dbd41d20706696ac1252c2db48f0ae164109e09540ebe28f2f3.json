{"ast":null,"code":"var _jsxFileName = \"/home/marc/exercise/projects/airbnb/frontend/src/components/EditSpot/index.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { putSpot } from \"../../store/spotReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditSpot = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    spotId\n  } = useParams();\n  const spot = useSelector(state => state.spots.allSpots[spotId]);\n  const [address, setAddress] = useState(spot.address);\n  const [city, setCity] = useState(spot.city);\n  const [state, setState] = useState(spot.state);\n  const [country, setCountry] = useState(spot.country);\n  const [lat, setLat] = useState(spot.lat);\n  const [lng, setLng] = useState(spot.lng);\n  const [name, setName] = useState(spot.name);\n  const [description, setDescription] = useState(spot.description);\n  const [price, setPrice] = useState(spot.price);\n  const [image, setImage] = useState(spot.previewImage);\n  const [errors, setErrors] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      spot: {\n        id: spot.id,\n        address,\n        city,\n        state,\n        country,\n        lat,\n        lng,\n        name,\n        description,\n        price\n      },\n      imageUrl: image\n    };\n    return dispatch(putSpot(payload)).catch(async res => {\n      const data = await res.json();\n      if (data && data.errors) {\n        console.log('data: ', data);\n        console.log('data.errors: ', data.errors);\n        setErrors(data.errors);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spot-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit \", spot.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-spot-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"City\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"State\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: state,\n          onChange: e => setState(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"Country\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: country,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"Latitude\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: lat,\n          onChange: e => setLat(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"Longitude\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: lng,\n          onChange: e => setLng(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(EditSpot, \"Y4tlCXzkpFt5YFF24bFdAhNXvoY=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = EditSpot;\nexport default EditSpot;\nvar _c;\n$RefreshReg$(_c, \"EditSpot\");","map":{"version":3,"names":["useSelector","useDispatch","useParams","useState","putSpot","EditSpot","dispatch","spotId","spot","state","spots","allSpots","address","setAddress","city","setCity","setState","country","setCountry","lat","setLat","lng","setLng","name","setName","description","setDescription","price","setPrice","image","setImage","previewImage","errors","setErrors","handleSubmit","e","preventDefault","payload","id","imageUrl","catch","res","data","json","console","log","map","error","idx","target","value"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/components/EditSpot/index.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\"\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\"\nimport { putSpot } from \"../../store/spotReducer\";\n\nconst EditSpot = ()=>{\n\n  const dispatch = useDispatch();\n  const { spotId } = useParams();\n  const spot = useSelector((state) => state.spots.allSpots[spotId])\n\n  const [address, setAddress] = useState(spot.address);\n  const [city, setCity] = useState(spot.city);\n  const [state, setState] = useState(spot.state);\n  const [country, setCountry] = useState(spot.country);\n  const [lat, setLat] = useState(spot.lat);\n  const [lng, setLng] = useState(spot.lng)\n  const [name, setName] = useState(spot.name);\n  const [description, setDescription] = useState(spot.description);\n  const [price, setPrice] = useState(spot.price);\n  const [image, setImage] = useState(spot.previewImage)\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    const payload = {spot: {id: spot.id,\n         address, city, state, country, lat, lng, name, description, price},\n        imageUrl: image}\n    return dispatch(putSpot(payload))\n    .catch(async(res) =>{\n        const data = await res.json()\n        if( data && data.errors) {\n            console.log('data: ', data)\n            console.log('data.errors: ', data.errors)\n            setErrors(data.errors)\n        }\n    })\n    }\n\n    return (\n        <div className=\"spot-form-container\">\n            <h1>Edit {spot.name}</h1>\n            <form className=\"create-spot-form\" onSubmit={handleSubmit}>\n                <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                </ul>\n                <lable>\n                    Address\n                <input\n                    type=\"text\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n\n                />\n                </lable>\n                <lable>\n                    City\n                <input\n                    type=\"text\"\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                />\n                </lable>\n                <lable>\n                    State\n                <input\n                    type=\"text\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                />\n                </lable>\n                <lable>\n                    Country\n                <input\n                    type=\"text\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                />\n                </lable>\n                <lable>\n                    Latitude\n                <input\n                    type=\"number\"\n                    value={lat}\n                    onChange={(e) => setLat(e.target.value)}\n                />\n                </lable>\n                <lable>\n                    Longitude\n                <input\n                    type=\"number\"\n                    value={lng}\n                    onChange={(e) => setLng(e.target.value)}\n                />\n                </lable>\n                <lable>\n                    Name\n                <input\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                </lable>\n                <lable>\n                    Description\n                <input\n                    type=\"text\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n                </lable>\n                <lable>\n                    Price\n                <input\n                    type=\"number\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                />\n                </lable>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditSpot\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}