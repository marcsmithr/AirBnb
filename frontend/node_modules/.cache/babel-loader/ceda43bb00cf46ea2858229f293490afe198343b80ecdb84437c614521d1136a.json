{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD = 'spots/LOAD';\nconst CREATE = 'spots/CREATE';\n// const DELETE = 'spots/DELETE'\nconst GET_ONE = 'spots/GET_ONE';\nconst load = spots => ({\n  type: LOAD,\n  spots\n});\nconst create = spot => ({\n  type: CREATE,\n  spot\n});\nconst getOne = spot => ({\n  type: GET_ONE,\n  spot\n});\n\n// const remove = spotId => ({\n//     type: DELETE,\n//     spotId\n// })\n\nexport const getSpots = () => async dispatch => {\n  const response = await csrfFetch('/api/spots');\n  if (response.ok) {\n    const {\n      Spots\n    } = await response.json();\n    dispatch(load(Spots));\n    return Spots;\n  }\n  return response;\n};\nexport const postSpot = payload => async dispatch => {\n  console.log('hello from postspot');\n  const response = await csrfFetch('/api/spots', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  console.log('response: ', response);\n  if (response.ok) {\n    const spot = await response.json();\n    console.log();\n    dispatch(create(spot));\n    return spot;\n  }\n  return response;\n};\nexport const putSpot = payload => async dispatch => {\n  const response = await csrfFetch(`/api/spots/${payload.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (response.ok) {\n    const spot = await response.json();\n    dispatch(create(spot));\n    return spot;\n  }\n  return response;\n};\nexport const getOneSpot = id => async dispatch => {\n  console.log('hello from get one spot');\n  const response = await csrfFetch(`/api/spots/${id}`);\n  if (response.ok) {\n    const spot = await response.json();\n    console.log('Thunk Spot: ', spot);\n    dispatch(getOne(spot));\n  }\n  return response;\n};\nconst intialState = {\n  allSpots: {},\n  singleSpot: {}\n};\nconst spotReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState;\n  switch (action.type) {\n    case LOAD:\n      {\n        newState = {\n          ...state\n        };\n        let spots2 = {};\n        action.spots.forEach(spot => {\n          spots2[spot.id] = spot;\n        });\n        newState.allSpots = spots2;\n        return newState;\n      }\n    case CREATE:\n      {\n        // console.log('state', state)\n        newState = {\n          ...state\n        };\n        let spot2 = {\n          ...state.allSpots\n        };\n        spot2;\n        newState.allSpots = spot2;\n        return newState;\n      }\n    case GET_ONE:\n      {\n        newState = {\n          ...state\n        };\n        console.log('action.spot', action.spot);\n        let singleSpot2 = action.spot;\n        newState.singleSpot = singleSpot2;\n        console.log('newState:', newState);\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default spotReducer;","map":{"version":3,"names":["csrfFetch","LOAD","CREATE","GET_ONE","load","spots","type","create","spot","getOne","getSpots","dispatch","response","ok","Spots","json","postSpot","payload","console","log","method","headers","body","JSON","stringify","putSpot","id","getOneSpot","intialState","allSpots","singleSpot","spotReducer","state","action","newState","spots2","forEach","spot2","singleSpot2"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/store/spotReducer.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\"\n\nconst LOAD = 'spots/LOAD'\nconst CREATE = 'spots/CREATE'\n// const DELETE = 'spots/DELETE'\nconst GET_ONE = 'spots/GET_ONE'\n\nconst load = spots => ({\n    type: LOAD,\n    spots\n})\n\nconst create = spot => ({\n    type: CREATE,\n    spot\n})\n\nconst getOne = spot => ({\n    type: GET_ONE,\n    spot\n})\n\n// const remove = spotId => ({\n//     type: DELETE,\n//     spotId\n// })\n\nexport const getSpots = () => async dispatch =>{\n    const response = await csrfFetch('/api/spots');\n\n    if (response.ok){\n        const {Spots} = await response.json();\n        dispatch(load(Spots))\n        return Spots\n    }\n    return response\n}\n\nexport const postSpot = (payload) => async dispatch => {\n    console.log('hello from postspot')\n    const response = await csrfFetch('/api/spots', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n    });\n    console.log('response: ' , response)\n    if(response.ok){\n        const spot = await response.json();\n        console.log()\n        dispatch(create(spot))\n        return spot\n    }\n    return response\n}\n\nexport const putSpot = (payload) => async dispatch => {\n    const response = await csrfFetch(`/api/spots/${payload.id}`,{\n        method: 'PUT',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n    });\n\n    if(response.ok) {\n        const spot = await response.json();\n        dispatch(create(spot))\n        return spot\n    }\n    return response\n}\n\nexport const getOneSpot = (id) => async dispatch => {\n    console.log('hello from get one spot')\n    const response= await csrfFetch(`/api/spots/${id}`);\n    if (response.ok){\n        const spot = await response.json();\n        console.log('Thunk Spot: ', spot)\n        dispatch(getOne(spot))\n    }\n    return response\n}\n\nconst intialState = {allSpots:{}, singleSpot: {}}\n\nconst spotReducer = (state = intialState, action) => {\n    let newState;\n    switch (action.type) {\n        case LOAD:{\n            newState = {...state}\n            let spots2 = {}\n\n            action.spots.forEach(spot => {\n                spots2[spot.id] = spot\n            })\n            newState.allSpots = spots2\n            return newState\n        }\n        case CREATE:{\n            // console.log('state', state)\n            newState = {...state}\n            let spot2 = {...state.allSpots}\n            spot2\n            newState.allSpots = spot2\n            return newState\n        }\n        case GET_ONE: {\n            newState = {...state}\n            console.log('action.spot', action.spot)\n            let singleSpot2 = action.spot\n            newState.singleSpot = singleSpot2\n            console.log('newState:' , newState)\n            return newState\n        }\n            default:\n                return state\n    }\n}\n\nexport default spotReducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}