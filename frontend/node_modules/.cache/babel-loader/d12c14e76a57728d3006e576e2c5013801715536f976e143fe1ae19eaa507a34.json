{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD = 'reviews/LOAD';\nconst CREATE = 'reviews/CREATE';\nconst load = reviews => ({\n  type: LOAD,\n  reviews\n});\nconst create = review => ({\n  type: CREATE,\n  review\n});\nexport const getReviews = id => async dispatch => {\n  const response = await csrfFetch(`/api/spots/${id}/reviews`);\n  if (response.ok) {\n    const {\n      Reviews\n    } = await response.json();\n    dispatch(load(Reviews));\n    return Reviews;\n  }\n  return response;\n};\nexport const postReview = payload => async dispatch => {\n  console.log('hello from postReview');\n  const {\n    reviewPayload,\n    spotId\n  } = payload;\n  cons;\n  const response = await csrfFetch(`api/spots/${spotId}/reviews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reviewPayload)\n  });\n  console.log('response: ', response);\n  if (response.ok) {\n    console.log('hello from response.ok');\n    const review = response.json();\n    console.log('review: ', review);\n    dispatch(create(review));\n    return review;\n  }\n  return response;\n};\nconst intialState = {\n  spots: {},\n  user: {}\n};\nconst reviewReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD:\n      {\n        const newState = {\n          ...state,\n          spots: {}\n        };\n        let reviewsNormalize = {};\n        action.reviews.forEach(review => {\n          reviewsNormalize[review.id] = review;\n        });\n        newState.spots = reviewsNormalize;\n        return newState;\n      }\n    case CREATE:\n      {\n        const newState = {\n          ...state\n        };\n        let review2 = {\n          ...state.spots\n        };\n        review2[action.review.id] = action.review;\n        newState.spots = review2;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default reviewReducer;","map":{"version":3,"names":["csrfFetch","LOAD","CREATE","load","reviews","type","create","review","getReviews","id","dispatch","response","ok","Reviews","json","postReview","payload","console","log","reviewPayload","spotId","cons","method","headers","body","JSON","stringify","intialState","spots","user","reviewReducer","state","action","newState","reviewsNormalize","forEach","review2"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/store/reviewReducer.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\"\n\nconst LOAD = 'reviews/LOAD'\nconst CREATE = 'reviews/CREATE'\n\n\nconst load = reviews => ({\n    type: LOAD,\n    reviews\n})\n\nconst create = review => ({\n    type: CREATE,\n    review\n})\n\n\nexport const getReviews = (id) => async dispatch => {\n    const response = await csrfFetch(`/api/spots/${id}/reviews`);\n\n    if (response.ok){\n        const {Reviews} = await response.json();\n        dispatch(load(Reviews))\n        return Reviews\n    }\n    return response\n}\n\nexport const postReview = (payload) => async dispatch =>{\n    console.log('hello from postReview')\n    const {reviewPayload, spotId} = payload\n    cons\n    const response = await csrfFetch(`api/spots/${spotId}/reviews`,{\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(reviewPayload)\n    })\n    console.log('response: ', response)\n    if(response.ok){\n        console.log('hello from response.ok')\n        const review = response.json();\n        console.log('review: ', review)\n        dispatch(create(review))\n        return review\n    }\n    return response\n}\n\nconst intialState = {spots:{}, user: {}}\n\nconst reviewReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case LOAD:{\n\n            const newState = {...state, spots: {}}\n            let reviewsNormalize = {};\n            action.reviews.forEach(review => {\n                reviewsNormalize[review.id] = review\n            });\n            newState.spots = reviewsNormalize\n            return newState\n        }\n        case CREATE: {\n            const newState = {...state}\n            let review2 = {...state.spots}\n            review2[action.review.id] = action.review\n            newState.spots = review2\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\nexport default reviewReducer\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAElC,MAAMC,IAAI,GAAG,cAAc;AAC3B,MAAMC,MAAM,GAAG,gBAAgB;AAG/B,MAAMC,IAAI,GAAGC,OAAO,KAAK;EACrBC,IAAI,EAAEJ,IAAI;EACVG;AACJ,CAAC,CAAC;AAEF,MAAME,MAAM,GAAGC,MAAM,KAAK;EACtBF,IAAI,EAAEH,MAAM;EACZK;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMC,UAAU,GAAIC,EAAE,IAAK,MAAMC,QAAQ,IAAI;EAChD,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAAE,cAAaS,EAAG,UAAS,CAAC;EAE5D,IAAIE,QAAQ,CAACC,EAAE,EAAC;IACZ,MAAM;MAACC;IAAO,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACvCJ,QAAQ,CAACP,IAAI,CAACU,OAAO,CAAC,CAAC;IACvB,OAAOA,OAAO;EAClB;EACA,OAAOF,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,OAAO,IAAK,MAAMN,QAAQ,IAAG;EACpDO,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,MAAM;IAACC,aAAa;IAAEC;EAAM,CAAC,GAAGJ,OAAO;EACvCK,IAAI;EACJ,MAAMV,QAAQ,GAAG,MAAMX,SAAS,CAAE,aAAYoB,MAAO,UAAS,EAAC;IAC3DE,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,aAAa;EACtC,CAAC,CAAC;EACFF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEP,QAAQ,CAAC;EACnC,IAAGA,QAAQ,CAACC,EAAE,EAAC;IACXK,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,MAAMX,MAAM,GAAGI,QAAQ,CAACG,IAAI,EAAE;IAC9BG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEX,MAAM,CAAC;IAC/BG,QAAQ,CAACJ,MAAM,CAACC,MAAM,CAAC,CAAC;IACxB,OAAOA,MAAM;EACjB;EACA,OAAOI,QAAQ;AACnB,CAAC;AAED,MAAMgB,WAAW,GAAG;EAACC,KAAK,EAAC,CAAC,CAAC;EAAEC,IAAI,EAAE,CAAC;AAAC,CAAC;AAExC,MAAMC,aAAa,GAAG,YAAiC;EAAA,IAAhCC,KAAK,uEAAGJ,WAAW;EAAA,IAAEK,MAAM;EAC9C,QAAQA,MAAM,CAAC3B,IAAI;IACf,KAAKJ,IAAI;MAAC;QAEN,MAAMgC,QAAQ,GAAG;UAAC,GAAGF,KAAK;UAAEH,KAAK,EAAE,CAAC;QAAC,CAAC;QACtC,IAAIM,gBAAgB,GAAG,CAAC,CAAC;QACzBF,MAAM,CAAC5B,OAAO,CAAC+B,OAAO,CAAC5B,MAAM,IAAI;UAC7B2B,gBAAgB,CAAC3B,MAAM,CAACE,EAAE,CAAC,GAAGF,MAAM;QACxC,CAAC,CAAC;QACF0B,QAAQ,CAACL,KAAK,GAAGM,gBAAgB;QACjC,OAAOD,QAAQ;MACnB;IACA,KAAK/B,MAAM;MAAE;QACT,MAAM+B,QAAQ,GAAG;UAAC,GAAGF;QAAK,CAAC;QAC3B,IAAIK,OAAO,GAAG;UAAC,GAAGL,KAAK,CAACH;QAAK,CAAC;QAC9BQ,OAAO,CAACJ,MAAM,CAACzB,MAAM,CAACE,EAAE,CAAC,GAAGuB,MAAM,CAACzB,MAAM;QACzC0B,QAAQ,CAACL,KAAK,GAAGQ,OAAO;QACxB,OAAOH,QAAQ;MACnB;IACA;MACI,OAAOF,KAAK;EAAA;AAExB,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}