{"ast":null,"code":"var _jsxFileName = \"/home/marc/exercise/projects/airbnb/frontend/src/components/SpotList/index.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpots } from \"../../store/spotReducer\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const spots = useSelector(state => state.spots);\n  useEffect(() => {\n    dispatch(getSpots());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spot List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: spots.map(_ref => {\n        let {\n          id,\n          name\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotList, \"2JYhBRMz/ykUEDSr+Lu/pZuq/m4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SpotList;\nexport default SpotList;\nvar _c;\n$RefreshReg$(_c, \"SpotList\");","map":{"version":3,"names":["useDispatch","useSelector","getSpots","useEffect","SpotList","dispatch","spots","state","map","id","name"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/components/SpotList/index.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\"\nimport { getSpots } from \"../../store/spotReducer\";\nimport { useEffect } from \"react\";\n\nconst SpotList = () => {\n    const dispatch = useDispatch();\n    const spots = useSelector(state => state.spots)\n    \n\n\n\n    useEffect(() => {\n        dispatch(getSpots());\n      }, [dispatch]);\n\n      return (\n        <div>\n          <h1>Spot List</h1>\n          <ul>\n            {spots.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      );\n    };\n\n    export default SpotList;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAK/CH,SAAS,CAAC,MAAM;IACZE,QAAQ,CAACH,QAAQ,EAAE,CAAC;EACtB,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB;MAAA,UACGC,KAAK,CAACE,GAAG,CAAC;QAAA,IAAC;UAAEC,EAAE;UAAEC;QAAK,CAAC;QAAA,oBACtB;UAAA,UAAcA;QAAI,GAATD,EAAE;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA,CACzB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GArBAL,QAAQ;EAAA,QACOJ,WAAW,EACdC,WAAW;AAAA;AAAA,KAFvBG,QAAQ;AAuBV,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}