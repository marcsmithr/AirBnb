{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst LOAD = 'spots/LOAD';\nconst CREATE = 'spots/CREATE';\n// const DELETE = 'spots/DELETE'\nconst GET_ONE = '';\nconst load = spots => ({\n  type: LOAD,\n  spots\n});\nconst create = spot => ({\n  type: CREATE,\n  spot\n});\n\n// const getOne = id => ({\n\n// })\n\n// const remove = spotId => ({\n//     type: DELETE,\n//     spotId\n// })\n\nexport const getSpots = () => async dispatch => {\n  const response = await csrfFetch('/api/spots');\n  if (response.ok) {\n    const {\n      Spots\n    } = await response.json();\n    dispatch(load(Spots));\n    return Spots;\n  }\n};\nexport const postSpot = payload => async dispatch => {\n  const response = await csrfFetch('/api/spots', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (response.ok) {\n    const spot = await response.json();\n    dispatch(create(spot));\n    return spot;\n  }\n};\nexport const putSpot = payload => async dispatch => {\n  const response = await csrfFetch(`/api/spots/${payload.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (response.ok) {\n    const spot = await response.json();\n    dispatch(create(spot));\n    return spot;\n  }\n};\nconst intialState = {\n  allSpots: {},\n  singleSpot: {}\n};\nconst spotReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD:\n      let newState = {\n        ...state\n      };\n      let spots2 = {};\n      action.spots.forEach(spot => {\n        spots2[spot.id] = spot;\n      });\n      newState.allSpots = spots2;\n      return newState;\n    case CREATE:\n      return {\n        ...state,\n        spots: [...state.spots, action.spot]\n      };\n    default:\n      return state;\n  }\n};\nexport default spotReducer;","map":{"version":3,"names":["csrfFetch","LOAD","CREATE","GET_ONE","load","spots","type","create","spot","getSpots","dispatch","response","ok","Spots","json","postSpot","payload","method","headers","body","JSON","stringify","putSpot","id","intialState","allSpots","singleSpot","spotReducer","state","action","newState","spots2","forEach"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/store/spotReducer.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\"\n\nconst LOAD = 'spots/LOAD'\nconst CREATE = 'spots/CREATE'\n// const DELETE = 'spots/DELETE'\nconst GET_ONE = ''\n\nconst load = spots => ({\n    type: LOAD,\n    spots\n})\n\nconst create = spot => ({\n    type: CREATE,\n    spot\n})\n\n// const getOne = id => ({\n\n// })\n\n// const remove = spotId => ({\n//     type: DELETE,\n//     spotId\n// })\n\nexport const getSpots = () => async dispatch =>{\n    const response = await csrfFetch('/api/spots');\n\n    if (response.ok){\n        const {Spots} = await response.json();\n        dispatch(load(Spots))\n        return Spots\n    }\n}\n\nexport const postSpot = (payload) => async dispatch => {\n    const response = await csrfFetch('/api/spots', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n    });\n    if(response.ok){\n        const spot = await response.json();\n        dispatch(create(spot))\n        return spot\n    }\n}\n\nexport const putSpot = (payload) => async dispatch => {\n    const response = await csrfFetch(`/api/spots/${payload.id}`,{\n        method: 'PUT',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n    });\n\n    if(response.ok) {\n        const spot = await response.json();\n        dispatch(create(spot))\n        return spot\n    }\n}\n\nconst intialState = {allSpots:{}, singleSpot: {}}\n\nconst spotReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case LOAD:\n            let newState = {...state}\n            let spots2 = {}\n\n            action.spots.forEach(spot => {\n                spots2[spot.id] = spot\n            })\n            newState.allSpots = spots2\n            return newState\n        case CREATE:\n            return {\n                ...state, spots: [...state.spots, action.spot]\n            }\n            default:\n                return state\n    }\n}\n\nexport default spotReducer\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAElC,MAAMC,IAAI,GAAG,YAAY;AACzB,MAAMC,MAAM,GAAG,cAAc;AAC7B;AACA,MAAMC,OAAO,GAAG,EAAE;AAElB,MAAMC,IAAI,GAAGC,KAAK,KAAK;EACnBC,IAAI,EAAEL,IAAI;EACVI;AACJ,CAAC,CAAC;AAEF,MAAME,MAAM,GAAGC,IAAI,KAAK;EACpBF,IAAI,EAAEJ,MAAM;EACZM;AACJ,CAAC,CAAC;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAQ,IAAG;EAC3C,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAAC,YAAY,CAAC;EAE9C,IAAIW,QAAQ,CAACC,EAAE,EAAC;IACZ,MAAM;MAACC;IAAK,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACrCJ,QAAQ,CAACN,IAAI,CAACS,KAAK,CAAC,CAAC;IACrB,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAME,QAAQ,GAAIC,OAAO,IAAK,MAAMN,QAAQ,IAAI;EACnD,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAAC,YAAY,EAAE;IAC3CiB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAChC,CAAC,CAAC;EACF,IAAGL,QAAQ,CAACC,EAAE,EAAC;IACX,MAAMJ,IAAI,GAAG,MAAMG,QAAQ,CAACG,IAAI,EAAE;IAClCJ,QAAQ,CAACH,MAAM,CAACC,IAAI,CAAC,CAAC;IACtB,OAAOA,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMc,OAAO,GAAIN,OAAO,IAAK,MAAMN,QAAQ,IAAI;EAClD,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAAE,cAAagB,OAAO,CAACO,EAAG,EAAC,EAAC;IACxDN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAChC,CAAC,CAAC;EAEF,IAAGL,QAAQ,CAACC,EAAE,EAAE;IACZ,MAAMJ,IAAI,GAAG,MAAMG,QAAQ,CAACG,IAAI,EAAE;IAClCJ,QAAQ,CAACH,MAAM,CAACC,IAAI,CAAC,CAAC;IACtB,OAAOA,IAAI;EACf;AACJ,CAAC;AAED,MAAMgB,WAAW,GAAG;EAACC,QAAQ,EAAC,CAAC,CAAC;EAAEC,UAAU,EAAE,CAAC;AAAC,CAAC;AAEjD,MAAMC,WAAW,GAAG,YAAiC;EAAA,IAAhCC,KAAK,uEAAGJ,WAAW;EAAA,IAAEK,MAAM;EAC5C,QAAQA,MAAM,CAACvB,IAAI;IACf,KAAKL,IAAI;MACL,IAAI6B,QAAQ,GAAG;QAAC,GAAGF;MAAK,CAAC;MACzB,IAAIG,MAAM,GAAG,CAAC,CAAC;MAEfF,MAAM,CAACxB,KAAK,CAAC2B,OAAO,CAACxB,IAAI,IAAI;QACzBuB,MAAM,CAACvB,IAAI,CAACe,EAAE,CAAC,GAAGf,IAAI;MAC1B,CAAC,CAAC;MACFsB,QAAQ,CAACL,QAAQ,GAAGM,MAAM;MAC1B,OAAOD,QAAQ;IACnB,KAAK5B,MAAM;MACP,OAAO;QACH,GAAG0B,KAAK;QAAEvB,KAAK,EAAE,CAAC,GAAGuB,KAAK,CAACvB,KAAK,EAAEwB,MAAM,CAACrB,IAAI;MACjD,CAAC;IACD;MACI,OAAOoB,KAAK;EAAA;AAE5B,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}