{"ast":null,"code":"const LOAD = 'spots/LOAD';\nconst CREATE = 'spots/CREATE';\nconst DELETE = 'spots/DELETE';\nconst load = spots => ({\n  type: LOAD,\n  spots\n});\nconst create = spot => ({\n  type: CREATE,\n  spot\n});\nconst remove = spotId => ({\n  type: DELETE,\n  spotId\n});\nexport const getSpots = () => async dispatch => {\n  const response = await fetch('/api/spots');\n  if (response.ok) {\n    const spots = await response.json();\n    dispatch(load(spots));\n    return spots;\n  }\n};\nexport const postSpot = () => async dispatch => {\n  const response = await fetch('/api/spots', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (response.ok) {\n    const spot = await response.json();\n    dispatch(create(spot));\n    return spot;\n  }\n};\nexport const putSpot = () => async dispatch => {\n  const response = await fetch(`/api/spots/${payload.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (response.ok) {\n    const spot = await response.json();\n    dispatch(create(spot));\n    return spot;\n  }\n};\nconst intialState = {\n  spots: {}\n};\nconst spotReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        spots: [...action.articles]\n      };\n    case CREATE:\n      return {\n        ...state,\n        spots: [...state.spots, action.spot]\n      };\n  }\n};\nexport default spotReducer;","map":{"version":3,"names":["LOAD","CREATE","DELETE","load","spots","type","create","spot","remove","spotId","getSpots","dispatch","response","fetch","ok","json","postSpot","method","headers","body","JSON","stringify","payload","putSpot","id","intialState","spotReducer","state","action","articles"],"sources":["/home/marc/exercise/projects/airbnb/frontend/src/store/spotReducer.js"],"sourcesContent":["\n\n\nconst LOAD = 'spots/LOAD'\nconst CREATE = 'spots/CREATE'\nconst DELETE = 'spots/DELETE'\n\nconst load = spots => ({\n    type: LOAD,\n    spots\n})\n\nconst create = spot => ({\n    type: CREATE,\n    spot\n})\n\nconst remove = spotId => ({\n    type: DELETE,\n    spotId\n})\n\nexport const getSpots = () => async dispatch =>{\n    const response = await fetch('/api/spots');\n\n    if (response.ok){\n        const spots = await response.json();\n        dispatch(load(spots))\n        return spots\n    }\n}\n\nexport const postSpot = () => async dispatch => {\n    const response = await fetch('/api/spots', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n    });\n    if(response.ok){\n        const spot = await response.json();\n        dispatch(create(spot))\n        return spot\n    }\n}\n\nexport const putSpot = () => async dispatch => {\n    const response = await fetch(`/api/spots/${payload.id}`,{\n        method: 'PUT',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n    });\n\n    if(response.ok) {\n        const spot = await response.json();\n        dispatch(create(spot))\n        return spot\n    }\n}\n\nconst intialState = {spots:{}}\n\nconst spotReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case LOAD:\n            return { ...state, spots: [...action.articles] };\n        case CREATE:\n            return {\n                ...state, spots: [...state.spots, action.spot]\n            }\n    }\n}\n\nexport default spotReducer\n"],"mappings":"AAGA,MAAMA,IAAI,GAAG,YAAY;AACzB,MAAMC,MAAM,GAAG,cAAc;AAC7B,MAAMC,MAAM,GAAG,cAAc;AAE7B,MAAMC,IAAI,GAAGC,KAAK,KAAK;EACnBC,IAAI,EAAEL,IAAI;EACVI;AACJ,CAAC,CAAC;AAEF,MAAME,MAAM,GAAGC,IAAI,KAAK;EACpBF,IAAI,EAAEJ,MAAM;EACZM;AACJ,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGC,MAAM,KAAK;EACtBJ,IAAI,EAAEH,MAAM;EACZO;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAQ,IAAG;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;EAE1C,IAAID,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMV,KAAK,GAAG,MAAMQ,QAAQ,CAACG,IAAI,EAAE;IACnCJ,QAAQ,CAACR,IAAI,CAACC,KAAK,CAAC,CAAC;IACrB,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMY,QAAQ,GAAG,MAAM,MAAML,QAAQ,IAAI;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;IACvCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,OAAO;EAChC,CAAC,CAAC;EACF,IAAGV,QAAQ,CAACE,EAAE,EAAC;IACX,MAAMP,IAAI,GAAG,MAAMK,QAAQ,CAACG,IAAI,EAAE;IAClCJ,QAAQ,CAACL,MAAM,CAACC,IAAI,CAAC,CAAC;IACtB,OAAOA,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMgB,OAAO,GAAG,MAAM,MAAMZ,QAAQ,IAAI;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaS,OAAO,CAACE,EAAG,EAAC,EAAC;IACpDP,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,OAAO;EAChC,CAAC,CAAC;EAEF,IAAGV,QAAQ,CAACE,EAAE,EAAE;IACZ,MAAMP,IAAI,GAAG,MAAMK,QAAQ,CAACG,IAAI,EAAE;IAClCJ,QAAQ,CAACL,MAAM,CAACC,IAAI,CAAC,CAAC;IACtB,OAAOA,IAAI;EACf;AACJ,CAAC;AAED,MAAMkB,WAAW,GAAG;EAACrB,KAAK,EAAC,CAAC;AAAC,CAAC;AAE9B,MAAMsB,WAAW,GAAG,YAAiC;EAAA,IAAhCC,KAAK,uEAAGF,WAAW;EAAA,IAAEG,MAAM;EAC5C,QAAQA,MAAM,CAACvB,IAAI;IACf,KAAKL,IAAI;MACL,OAAO;QAAE,GAAG2B,KAAK;QAAEvB,KAAK,EAAE,CAAC,GAAGwB,MAAM,CAACC,QAAQ;MAAE,CAAC;IACpD,KAAK5B,MAAM;MACP,OAAO;QACH,GAAG0B,KAAK;QAAEvB,KAAK,EAAE,CAAC,GAAGuB,KAAK,CAACvB,KAAK,EAAEwB,MAAM,CAACrB,IAAI;MACjD,CAAC;EAAA;AAEb,CAAC;AAED,eAAemB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}